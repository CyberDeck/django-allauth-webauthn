name: Code-Coverage

on: [push, workflow_dispatch]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
      #----------------------------------------------
      #     run pre-commit hooks to verify passes
      #----------------------------------------------
      - name: Run pre-commit hooks
        run: |
          poetry run pre-commit run --all-files trailing-whitespace
          poetry run pre-commit run --all-files end-of-file-fixer
          poetry run pre-commit run --all-files check-yaml
          poetry run pre-commit run --all-files reorder-python-imports
          poetry run pre-commit run --all-files pyupgrade
          poetry run pre-commit run --all-files black
          poetry run pre-commit run --all-files flake8
          poetry run pre-commit run --all-files mypy
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        run: |
          poetry run coverage run ./manage.py test
          poetry run coverage report -m
